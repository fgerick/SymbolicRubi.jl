# line nr: 23
@rule integrate((Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())))*(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~m, ~n), ~x), NeQ(~b*~c - ~a*~d, 0), EqQ(~b*~f - ~a*~g, 0), EqQ(~d*~h - ~c*~i, 0), IGtQ(~m, -2))
  (~A + ~B*Log(~e*Power((~a + ~b*~x)*Power(~c + ~d*~x, -1), ~n)))*(~h + ~i*~x)*Power(~f + ~g*~x, 1 + ~m)*Power(~g*(2 + ~m), -1) + ~i*(~b*~c - ~a*~d)*integrate((~A + ~B*Log(~e*Power((~a + ~b*~x)*Power(~c + ~d*~x, -1), ~n)) - ~B*~n)*Power(~f + ~g*~x, ~m), ~x)*Power(~b*~d*(2 + ~m), -1)
end

# line nr: 30
@rule integrate((Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())))*(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~m, ~n), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), NeQ(~b*~c - ~a*~d, 0), EqQ(~b*~f - ~a*~g, 0), EqQ(~d*~h - ~c*~i, 0), IGtQ(~m, -2))
  ~i*(~b*~c - ~a*~d)*integrate((~A + ~B*Log(~e*Power(~a + ~b*~x, ~n)*Power(Power(~c + ~d*~x, ~n), -1)) - ~B*~n)*Power(~f + ~g*~x, ~m), ~x)*Power(~b*~d*(2 + ~m), -1) + (~A + ~B*Log(~e*Power(~a + ~b*~x, ~n)*Power(Power(~c + ~d*~x, ~n), -1)))*(~h + ~i*~x)*Power(~f + ~g*~x, 1 + ~m)*Power(~g*(2 + ~m), -1)
end

# line nr: 37
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~n, ~p), ~x), NeQ(~b*~c - ~a*~d, 0), EqQ(~b*~f - ~a*~g, 0), EqQ(~d*~h - ~c*~i, 0), IntegersQ(~m, ~q))
  Power(~b*~c - ~a*~d, 1 + ~m + ~q)*Power(~g*Power(~b, -1), ~m)*Power(~i*Power(~d, -1), ~q)*Subst(integrate(Power(~x, ~m)*Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(Power(~b - ~d*~x, 2 + ~m + ~q), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 43
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~n, ~p), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), NeQ(~b*~c - ~a*~d, 0), EqQ(~b*~f - ~a*~g, 0), EqQ(~d*~h - ~c*~i, 0), IntegersQ(~m, ~q))
  Power(~b*~c - ~a*~d, 1 + ~m + ~q)*Power(~g*Power(~b, -1), ~m)*Power(~i*Power(~d, -1), ~q)*Subst(integrate(Power(~x, ~m)*Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(Power(~b - ~d*~x, 2 + ~m + ~q), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 49
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~m, ~n, ~p, ~q), ~x), NeQ(~b*~c - ~a*~d, 0), EqQ(~b*~f - ~a*~g, 0), EqQ(~d*~h - ~c*~i, 0), EqQ(2 + ~m + ~q, 0))
  Power(~d, 2)*Power(~g*(~a + ~b*~x)*Power(~b, -1), ~m)*Power((~b*~c - ~a*~d)*Power(~i, 2)*Power((~a + ~b*~x)*Power(~c + ~d*~x, -1), ~m)*Power(~i*(~c + ~d*~x)*Power(~d, -1), ~m), -1)*Subst(integrate(Power(~x, ~m)*Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 56
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~m, ~n, ~p, ~q), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), NeQ(~b*~c - ~a*~d, 0), EqQ(~b*~f - ~a*~g, 0), EqQ(~d*~h - ~c*~i, 0), EqQ(2 + ~m + ~q, 0))
  Power(~d, 2)*Power(~g*(~a + ~b*~x)*Power(~b, -1), ~m)*Power((~b*~c - ~a*~d)*Power(~i, 2)*Power((~a + ~b*~x)*Power(~c + ~d*~x, -1), ~m)*Power(~i*(~c + ~d*~x)*Power(~d, -1), ~m), -1)*Subst(integrate(Power(~x, ~m)*Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 70
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~n), ~x), NeQ(~b*~c - ~a*~d, 0), IntegersQ(~m, ~q), IGtQ(~p, 0), EqQ(~d*~h - ~c*~i, 0))
  Power(~b*~c - ~a*~d, 1 + ~q)*Power(~i*Power(~d, -1), ~q)*Subst(integrate(Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(~b*~f - ~a*~g - ~x*(~d*~f - ~c*~g), ~m)*Power(Power(~b - ~d*~x, 2 + ~m + ~q), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 76
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~n), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), NeQ(~b*~c - ~a*~d, 0), IntegersQ(~m, ~q), IGtQ(~p, 0), EqQ(~d*~h - ~c*~i, 0))
  Power(~b*~c - ~a*~d, 1 + ~q)*Power(~i*Power(~d, -1), ~q)*Subst(integrate(Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(~b*~f - ~a*~g - ~x*(~d*~f - ~c*~g), ~m)*Power(Power(~b - ~d*~x, 2 + ~m + ~q), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 82
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~n), ~x), NeQ(~b*~c - ~a*~d, 0), IntegersQ(~m, ~q), IGtQ(~p, 0))
  (~b*~c - ~a*~d)*Subst(integrate(Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(~b*~f - ~a*~g - ~x*(~d*~f - ~c*~g), ~m)*Power(~b*~h - ~a*~i - ~x*(~d*~h - ~c*~i), ~q)*Power(Power(~b - ~d*~x, 2 + ~m + ~q), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 88
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~n), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), NeQ(~b*~c - ~a*~d, 0), IntegersQ(~m, ~q), IGtQ(~p, 0))
  (~b*~c - ~a*~d)*Subst(integrate(Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(~b*~f - ~a*~g - ~x*(~d*~f - ~c*~g), ~m)*Power(~b*~h - ~a*~i - ~x*(~d*~h - ~c*~i), ~q)*Power(Power(~b - ~d*~x, 2 + ~m + ~q), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1))
end

# line nr: 94
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~m, ~n, ~p, ~q), ~x)
  Unintegrable(Power(~A + ~B*Log(~e*Power((~a + ~b*~x)*Power(~c + ~d*~x, -1), ~n)), ~p)*Power(~f + ~g*~x, ~m)*Power(~h + ~i*~x, ~q), ~x)
end

# line nr: 100
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~i, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~i, ~A, ~B, ~m, ~n, ~p, ~q), ~x), EqQ(~mn + ~n, 0), IntegerQ(~n))
  Unintegrable(Power(~A + ~B*Log(~e*Power(~a + ~b*~x, ~n)*Power(Power(~c + ~d*~x, ~n), -1)), ~p)*Power(~f + ~g*~x, ~m)*Power(~h + ~i*~x, ~q), ~x)
end

# line nr: 106
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Pattern(~u, Blank())*Power(Pattern(~v, Blank()), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Pattern(~w, Blank()), Optional(Pattern(~m, Blank())))*Power(Pattern(~y, Blank()), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~e, ~A, ~B, ~m, ~n, ~p, ~q), ~x), LinearQ(List(~u, ~v, ~w, ~y), ~x), Not(LinearMatchQ(List(~u, ~v, ~w, ~y), ~x)))
  integrate(Power(~A + ~B*Log(~e*Power(ExpandToSum(~u, ~x)*Power(ExpandToSum(~v, ~x), -1), ~n)), ~p)*Power(ExpandToSum(~w, ~x), ~m)*Power(ExpandToSum(~y, ~x), ~q), ~x)
end

# line nr: 112
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Pattern(~u, Blank()), Optional(Pattern(~n, Blank())))*Power(Pattern(~v, Blank()), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Pattern(~w, Blank()), Optional(Pattern(~m, Blank())))*Power(Pattern(~y, Blank()), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~e, ~A, ~B, ~m, ~n, ~p, ~q), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), LinearQ(List(~u, ~v, ~w, ~y), ~x), Not(LinearMatchQ(List(~u, ~v, ~w, ~y), ~x)))
  integrate(Power(~A + ~B*Log(~e*Power(ExpandToSum(~u, ~x), ~n)*Power(Power(ExpandToSum(~v, ~x), ~n), -1)), ~p)*Power(ExpandToSum(~w, ~x), ~m)*Power(ExpandToSum(~y, ~x), ~q), ~x)
end

# line nr: 118
@rule integrate(Optional(Pattern(~w, Blank()))*Power(Log(Optional(Pattern(~e, Blank()))*Power(Pattern(~u, Blank()), Optional(Pattern(~n, Blank())))*Power(Pattern(~v, Blank()), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~e, ~A, ~B, ~n, ~p), ~x), EqQ(~mn + ~n, 0), LinearQ(List(~u, ~v), ~x), Not(IntegerQ(~n)))
  Subst(integrate(~w*Power(~A + ~B*Log(~e*Power(~u*Power(~v, -1), ~n)), ~p), ~x), ~e*Power(~u*Power(~v, -1), ~n), ~e*Power(~u, ~n)*Power(Power(~v, ~n), -1))
end

# line nr: 130
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~A, ~B, ~n, ~p), ~x), EqQ(~b*~d*~f - ~a*~c*~h, 0), EqQ(~b*~d*~g - ~h*(~b*~c + ~a*~d), 0), IntegerQ(~m))
  Power(~h, ~m)*Power(Power(~b, ~m)*Power(~d, ~m), -1)*integrate(Power(~A + ~B*Log(~e*Power((~a + ~b*~x)*Power(~c + ~d*~x, -1), ~n)), ~p)*Power(~a + ~b*~x, ~m)*Power(~c + ~d*~x, ~m), ~x)
end

# line nr: 136
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~g, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~h, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~f, Blank())), Optional(Pattern(~m, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~g, ~h, ~A, ~B, ~n, ~p), ~x), EqQ(~mn + ~n, 0), IGtQ(~n, 0), EqQ(~b*~d*~f - ~a*~c*~h, 0), EqQ(~b*~d*~g - ~h*(~b*~c + ~a*~d), 0), IntegerQ(~m))
  Power(~h, ~m)*Power(Power(~b, ~m)*Power(~d, ~m), -1)*integrate(Power(~A + ~B*Log(~e*Power(~a + ~b*~x, ~n)*Power(Power(~c + ~d*~x, ~n), -1)), ~p)*Power(~a + ~b*~x, ~m)*Power(~c + ~d*~x, ~m), ~x)
end

# line nr: 142
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), -1), Optional(Pattern(~n, Blank()))))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Pattern(~P2x, Blank()), Optional(Pattern(~m, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~A, ~B, ~n), ~x), PolyQ(~P2x, ~x, 2), NeQ(~b*~c - ~a*~d, 0), IntegerQ(~m), IGtQ(~p, 0))
  With(List(Set(~f, Coeff(~P2x, ~x, 0)), Set(~g, Coeff(~P2x, ~x, 1)), Set(~h, Coeff(~P2x, ~x, 2))), (~b*~c - ~a*~d)*Subst(integrate(Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(~h*Power(~a, 2) + ~f*Power(~b, 2) + (~f*Power(~d, 2) + ~h*Power(~c, 2) - ~c*~d*~g)*Power(~x, 2) - ~x*(2 * ~b*~d*~f + 2 * ~a*~c*~h - ~b*~c*~g - ~a*~d*~g) - ~a*~b*~g, ~m)*Power(Power(~b - ~d*~x, 2 + 2 * ~m), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1)))
end

# line nr: 151
@rule integrate(Power(Log(Optional(Pattern(~e, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~a, Blank())), Optional(Pattern(~n, Blank())))*Power(Optional(Pattern(~d, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank())), Pattern(~mn, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~A, Blank())), Optional(Pattern(~p, Blank())))*Power(Pattern(~P2x, Blank()), Optional(Pattern(~m, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~A, ~B, ~n), ~x), PolyQ(~P2x, ~x, 2), EqQ(~mn + ~n, 0), IGtQ(~n, 0), NeQ(~b*~c - ~a*~d, 0), IntegerQ(~m), IGtQ(~p, 0))
  With(List(Set(~f, Coeff(~P2x, ~x, 0)), Set(~g, Coeff(~P2x, ~x, 1)), Set(~h, Coeff(~P2x, ~x, 2))), (~b*~c - ~a*~d)*Subst(integrate(Power(~A + ~B*Log(~e*Power(~x, ~n)), ~p)*Power(~h*Power(~a, 2) + ~f*Power(~b, 2) + (~f*Power(~d, 2) + ~h*Power(~c, 2) - ~c*~d*~g)*Power(~x, 2) - ~x*(2 * ~b*~d*~f + 2 * ~a*~c*~h - ~b*~c*~g - ~a*~d*~g) - ~a*~b*~g, ~m)*Power(Power(~b - ~d*~x, 2 + 2 * ~m), -1), ~x), ~x, (~a + ~b*~x)*Power(~c + ~d*~x, -1)))
end

