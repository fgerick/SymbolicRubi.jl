# line nr: 23
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), EqQ(~c*~d - ~a*~f, 0), EqQ(~b*~d - ~a*~e, 0), Or(IntegerQ(~p), GtQ(~c*Power(~f, -1), 0)), Or(Not(IntegerQ(~q)), LessEqual(LeafCount(~d + ~e*~x + ~f*Power(~x, 2)), LeafCount(~a + ~b*~x + ~c*Power(~x, 2)))))
  Power(~c*Power(~f, -1), ~p)*integrate((~A + ~B*~x + ~C*Power(~x, 2))*Power(~d + ~e*~x + ~f*Power(~x, 2), ~p + ~q), ~x)
end

# line nr: 30
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~p, ~q), ~x), EqQ(~c*~d - ~a*~f, 0), EqQ(~b*~d - ~a*~e, 0), Or(IntegerQ(~p), GtQ(~c*Power(~f, -1), 0)), Or(Not(IntegerQ(~q)), LessEqual(LeafCount(~d + ~e*~x + ~f*Power(~x, 2)), LeafCount(~a + ~b*~x + ~c*Power(~x, 2)))))
  Power(~c*Power(~f, -1), ~p)*integrate((~A + ~C*Power(~x, 2))*Power(~d + ~e*~x + ~f*Power(~x, 2), ~p + ~q), ~x)
end

# line nr: 37
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), EqQ(~c*~d - ~a*~f, 0), EqQ(~b*~d - ~a*~e, 0), Not(IntegerQ(~p)), Not(IntegerQ(~q)), Not(GtQ(~c*Power(~f, -1), 0)))
  Power(~a, IntPart(~p))*Power(~a + ~b*~x + ~c*Power(~x, 2), FracPart(~p))*integrate((~A + ~B*~x + ~C*Power(~x, 2))*Power(~d + ~e*~x + ~f*Power(~x, 2), ~p + ~q), ~x)*Power(Power(~d, IntPart(~p))*Power(~d + ~e*~x + ~f*Power(~x, 2), FracPart(~p)), -1)
end

# line nr: 43
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~p, ~q), ~x), EqQ(~c*~d - ~a*~f, 0), EqQ(~b*~d - ~a*~e, 0), Not(IntegerQ(~p)), Not(IntegerQ(~q)), Not(GtQ(~c*Power(~f, -1), 0)))
  Power(~a, IntPart(~p))*Power(~a + ~b*~x + ~c*Power(~x, 2), FracPart(~p))*integrate((~A + ~C*Power(~x, 2))*Power(~d + ~e*~x + ~f*Power(~x, 2), ~p + ~q), ~x)*Power(Power(~d, IntPart(~p))*Power(~d + ~e*~x + ~f*Power(~x, 2), FracPart(~p)), -1)
end

# line nr: 49
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), EqQ(Power(~b, 2) - 4 * ~a*~c, 0))
  Power(~a + ~b*~x + ~c*Power(~x, 2), FracPart(~p))*Power(Power(~b + 2 * ~c*~x, 2FracPart(~p))*Power(4 * ~c, IntPart(~p)), -1)*integrate((~A + ~B*~x + ~C*Power(~x, 2))*Power(~b + 2 * ~c*~x, 2 * ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x)
end

# line nr: 55
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~p, ~q), ~x), EqQ(Power(~b, 2) - 4 * ~a*~c, 0))
  Power(~a + ~b*~x + ~c*Power(~x, 2), FracPart(~p))*Power(Power(~b + 2 * ~c*~x, 2FracPart(~p))*Power(4 * ~c, IntPart(~p)), -1)*integrate((~A + ~C*Power(~x, 2))*Power(~b + 2 * ~c*~x, 2 * ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x)
end

# line nr: 61
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~B, ~C, ~p, ~q), ~x), EqQ(Power(~b, 2) - 4 * ~a*~c, 0))
  Power(~a + ~b*~x + ~c*Power(~x, 2), FracPart(~p))*Power(Power(~b + 2 * ~c*~x, 2FracPart(~p))*Power(4 * ~c, IntPart(~p)), -1)*integrate((~A + ~B*~x + ~C*Power(~x, 2))*Power(~b + 2 * ~c*~x, 2 * ~p)*Power(~d + ~f*Power(~x, 2), ~q), ~x)
end

# line nr: 67
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Optional(Pattern(~p, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~C, ~p, ~q), ~x), EqQ(Power(~b, 2) - 4 * ~a*~c, 0))
  Power(~a + ~b*~x + ~c*Power(~x, 2), FracPart(~p))*Power(Power(~b + 2 * ~c*~x, 2FracPart(~p))*Power(4 * ~c, IntPart(~p)), -1)*integrate((~A + ~C*Power(~x, 2))*Power(~b + 2 * ~c*~x, 2 * ~p)*Power(~d + ~f*Power(~x, 2), ~q), ~x)
end

# line nr: 73
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), GtQ(~q, 0), Not(IGtQ(~q, 0)))
  (~C*~a*~b + ~A*~b*~c - ~x*(~c*(~B*~b - 2 * ~A*~c) - ~C*(Power(~b, 2) - 2 * ~a*~c)) - 2 * ~B*~a*~c)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1) - Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1)*integrate(Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q - 1)*Simp(~x*(2 * ~f*~q*(~C*~a*~b + ~A*~b*~c - 2 * ~B*~a*~c) - ~e*(~C*(2 * ~a*~c*(1 + ~q) - (2 + ~p + ~q)*Power(~b, 2)) + ~c*(~B*~b - 2 * ~A*~c)*(3 + ~q + 2 * ~p))) + ~e*~q*(~C*~a*~b + ~A*~b*~c - 2 * ~B*~a*~c) - ~d*(~C*(2 * ~a*~c - (2 + ~p)*Power(~b, 2)) + ~c*(3 + 2 * ~p)*(~B*~b - 2 * ~A*~c)) - ~f*(~C*(2 * ~a*~c*(1 + 2 * ~q) - (2 + ~p + 2 * ~q)*Power(~b, 2)) + ~c*(~B*~b - 2 * ~A*~c)*(3 + 2 * ~p + 2 * ~q))*Power(~x, 2), ~x), ~x)
end

# line nr: 84
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), GtQ(~q, 0), Not(IGtQ(~q, 0)))
  (~x*(~C*(Power(~b, 2) - 2 * ~a*~c) + 2 * ~A*Power(~c, 2)) + ~C*~a*~b + ~A*~b*~c)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1) - Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1)*integrate(Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q - 1)*Simp(~x*(~C*(~e*(2 + ~p + ~q)*Power(~b, 2) + 2 * ~a*~b*~f*~q - 2 * ~a*~c*~e*(1 + ~q)) + 2 * ~A*~c*(~b*~f*~q + ~c*~e*(3 + ~q + 2 * ~p))) + ~A*~c*(~b*~e*~q + 2 * ~c*~d*(3 + 2 * ~p)) - ~C*(2 * ~a*~c*~d - ~d*(2 + ~p)*Power(~b, 2) - ~a*~b*~e*~q) - ~f*(~C*(2 * ~a*~c*(1 + 2 * ~q) - (2 + ~p + 2 * ~q)*Power(~b, 2)) - 2 * ~A*(3 + 2 * ~p + 2 * ~q)*Power(~c, 2))*Power(~x, 2), ~x), ~x)
end

# line nr: 95
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), GtQ(~q, 0), Not(IGtQ(~q, 0)))
  (~B*~a - ~x*(~A*~c - ~C*~a))*Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Power(2 * ~a*~c*(1 + ~p), -1) - 2integrate(Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q - 1)*Simp(~x*(~A*~c*~e*(3 + ~q + 2 * ~p) - ~a*(~C*~e*(1 + ~q) + 2 * ~B*~f*~q)) + ~A*~c*~d*(3 + 2 * ~p) - ~a*(~C*~d + ~B*~e*~q) - ~f*(~C*~a*(1 + 2 * ~q) - ~A*~c*(3 + 2 * ~p + 2 * ~q))*Power(~x, 2), ~x), ~x)*Power(-4 * ~a*~c*(1 + ~p), -1)
end

# line nr: 104
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), GtQ(~q, 0), Not(IGtQ(~q, 0)))
  2integrate(Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q - 1)*Simp(~x*(~A*~c*~e*(3 + ~q + 2 * ~p) - ~C*~a*~e*(1 + ~q)) + ~A*~c*~d*(3 + 2 * ~p) - ~C*~a*~d - ~f*(~C*~a*(1 + 2 * ~q) - ~A*~c*(3 + 2 * ~p + 2 * ~q))*Power(~x, 2), ~x), ~x)*Power(4 * ~a*~c*(1 + ~p), -1) + ~x*(~C*~a - ~A*~c)*Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Power(2 * ~a*~c*(1 + ~p), -1)
end

# line nr: 113
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), LtQ(~p, -1), GtQ(~q, 0), Not(IGtQ(~q, 0)))
  (~C*~a*~b + ~A*~b*~c - ~x*(~c*(~B*~b - 2 * ~A*~c) - ~C*(Power(~b, 2) - 2 * ~a*~c)) - 2 * ~B*~a*~c)*Power(~d + ~f*Power(~x, 2), ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1) - Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1)*integrate(Power(~d + ~f*Power(~x, 2), ~q - 1)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Simp(2 * ~f*~q*~x*(~C*~a*~b + ~A*~b*~c - 2 * ~B*~a*~c) - ~d*(~C*(2 * ~a*~c - (2 + ~p)*Power(~b, 2)) + ~c*(3 + 2 * ~p)*(~B*~b - 2 * ~A*~c)) - ~f*(~C*(2 * ~a*~c*(1 + 2 * ~q) - (2 + ~p + 2 * ~q)*Power(~b, 2)) + ~c*(~B*~b - 2 * ~A*~c)*(3 + 2 * ~p + 2 * ~q))*Power(~x, 2), ~x), ~x)
end

# line nr: 124
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), LtQ(~p, -1), GtQ(~q, 0), Not(IGtQ(~q, 0)))
  (~x*(~C*(Power(~b, 2) - 2 * ~a*~c) + 2 * ~A*Power(~c, 2)) + ~C*~a*~b + ~A*~b*~c)*Power(~d + ~f*Power(~x, 2), ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1) - Power(~c*(1 + ~p)*(Power(~b, 2) - 4 * ~a*~c), -1)*integrate(Power(~d + ~f*Power(~x, 2), ~q - 1)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Simp(~x*(2 * ~C*~a*~b*~f*~q + 2 * ~A*~b*~c*~f*~q) + 2 * ~A*~d*((~c)^2)*(3 + 2 * ~p) - ~C*(2 * ~a*~c*~d - ~d*(2 + ~p)*Power(~b, 2)) - ~f*(~C*(2 * ~a*~c*(1 + 2 * ~q) - (2 + ~p + 2 * ~q)*Power(~b, 2)) - 2 * ~A*(3 + 2 * ~p + 2 * ~q)*Power(~c, 2))*Power(~x, 2), ~x), ~x)
end

# line nr: 135
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), NeQ(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f), 0), Not(And(Not(IntegerQ(~p)), ILtQ(~q, -1))), Not(IGtQ(~q, 0)))
  Power((1 + ~p)*(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f))*(Power(~b, 2) - 4 * ~a*~c), -1)*integrate(Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp((~a*~f*(1 + ~p) - ~c*~d*(2 + ~p))*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f - ~B*~c*~e) - ~b*(~C*~a*~e + ~B*~a*~f + ~A*~c*~e + ~B*~c*~d)) + (1 + ~p)*(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f))*(~B*~b - 2 * ~C*~a - 2 * ~A*~c) - ~x*(2 * ~f*((~A*~b - ~B*~a)*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)) + (~A*~c - ~C*~a)*(2 * ~a*~c*~e - ~b*(~c*~d + ~a*~f)))*(2 + ~p + ~q) - (~b*~f*(1 + ~p) - ~c*~e*(4 + ~q + 2 * ~p))*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f - ~B*~c*~e) - ~b*(~C*~a*~e + ~B*~a*~f + ~A*~c*~e + ~B*~c*~d))) - ~e*((~A*~b - ~B*~a)*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)) + (~A*~c - ~C*~a)*(2 * ~a*~c*~e - ~b*(~c*~d + ~a*~f)))*(2 + ~p + ~q) - ~c*~f*(5 + 2 * ~p + 2 * ~q)*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f - ~B*~c*~e) - ~b*(~C*~a*~e + ~B*~a*~f + ~A*~c*~e + ~B*~c*~d))*Power(~x, 2), ~x), ~x) + ((~A*~b - ~B*~a)*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)) + (~A*~c - ~C*~a)*(2 * ~a*~c*~e - ~b*(~c*~d + ~a*~f)) + ~c*~x*(~A*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)) + ~C*(~d*Power(~b, 2) - 2 * ~a*(~c*~d - ~a*~f) - ~a*~b*~e) - ~B*(~a*~b*~f + ~b*~c*~d - 2 * ~a*~c*~e)))*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power((1 + ~p)*(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f))*(Power(~b, 2) - 4 * ~a*~c), -1)
end

# line nr: 153
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), NeQ(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f), 0), Not(And(Not(IntegerQ(~p)), ILtQ(~q, -1))), Not(IGtQ(~q, 0)))
  Power((1 + ~p)*(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f))*(Power(~b, 2) - 4 * ~a*~c), -1)*integrate(Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp((~a*~f*(1 + ~p) - ~c*~d*(2 + ~p))*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - ~b*(~C*~a*~e + ~A*~c*~e) - 2 * ~a*(~C*~c*~d - ~C*~a*~f)) + (1 + ~p)*(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f))*(-2 * ~C*~a - 2 * ~A*~c) - ~x*(2 * ~f*((~A*~c - ~C*~a)*(2 * ~a*~c*~e - ~b*(~c*~d + ~a*~f)) + ~A*~b*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)))*(2 + ~p + ~q) - (~b*~f*(1 + ~p) - ~c*~e*(4 + ~q + 2 * ~p))*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - ~b*(~C*~a*~e + ~A*~c*~e) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))) - ~e*((~A*~c - ~C*~a)*(2 * ~a*~c*~e - ~b*(~c*~d + ~a*~f)) + ~A*~b*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)))*(2 + ~p + ~q) - ~c*~f*(5 + 2 * ~p + 2 * ~q)*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - ~b*(~C*~a*~e + ~A*~c*~e) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))*Power(~x, 2), ~x), ~x) + ((~A*~c - ~C*~a)*(2 * ~a*~c*~e - ~b*(~c*~d + ~a*~f)) + ~A*~b*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)) + ~c*~x*(~A*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - ~c*(~b*~e + 2 * ~a*~f)) + ~C*(~d*Power(~b, 2) - 2 * ~a*(~c*~d - ~a*~f) - ~a*~b*~e)))*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power((1 + ~p)*(Power(~c*~d - ~a*~f, 2) - (~b*~d - ~a*~e)*(~c*~e - ~b*~f))*(Power(~b, 2) - 4 * ~a*~c), -1)
end

# line nr: 171
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~q), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), NeQ(~a*~c*Power(~e, 2) + Power(~c*~d - ~a*~f, 2), 0), Not(And(Not(IntegerQ(~p)), ILtQ(~q, -1))), Not(IGtQ(~q, 0)))
  integrate(Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp((2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f - ~B*~c*~e))*(~a*~f*(1 + ~p) - ~c*~d*(2 + ~p)) + (1 + ~p)*(-2 * ~C*~a - 2 * ~A*~c)*(~a*~c*((~e)^2) + Power(~c*~d - ~a*~f, 2)) - ~x*(~c*~e*(2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f - ~B*~c*~e))*(4 + ~q + 2 * ~p) + 2 * ~f*(2 * ~a*~c*~e*(~A*~c - ~C*~a) - ~B*~a*(2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f))*(2 + ~p + ~q)) - ~e*(2 * ~a*~c*~e*(~A*~c - ~C*~a) - ~B*~a*(2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f))*(2 + ~p + ~q) - ~c*~f*(2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f - ~B*~c*~e))*(5 + 2 * ~p + 2 * ~q)*Power(~x, 2), ~x), ~x)*Power(-4 * ~a*~c*(1 + ~p)*(~a*~c*Power(~e, 2) + Power(~c*~d - ~a*~f, 2)), -1) + (~c*~x*(~A*(2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) + 2 * ~B*~a*~c*~e - 2 * ~C*~a*(~c*~d - ~a*~f)) + 2 * ~a*~c*~e*(~A*~c - ~C*~a) - ~B*~a*(2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f))*Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power(-4 * ~a*~c*(1 + ~p)*(~a*~c*Power(~e, 2) + Power(~c*~d - ~a*~f, 2)), -1)
end

# line nr: 188
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~C, ~q), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), LtQ(~p, -1), NeQ(~a*~c*Power(~e, 2) + Power(~c*~d - ~a*~f, 2), 0), Not(And(Not(IntegerQ(~p)), ILtQ(~q, -1))), Not(IGtQ(~q, 0)))
  integrate(Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp((2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))*(~a*~f*(1 + ~p) - ~c*~d*(2 + ~p)) + (1 + ~p)*(-2 * ~C*~a - 2 * ~A*~c)*(~a*~c*((~e)^2) + Power(~c*~d - ~a*~f, 2)) - ~x*(~c*~e*(2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))*(4 + ~q + 2 * ~p) + 4 * ~a*~c*~e*~f*(~A*~c - ~C*~a)*(2 + ~p + ~q)) - ~c*~f*(2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))*(5 + 2 * ~p + 2 * ~q)*Power(~x, 2) - 2 * ~a*~c*(2 + ~p + ~q)*((~e)^2)*(~A*~c - ~C*~a), ~x), ~x)*Power(-4 * ~a*~c*(1 + ~p)*(~a*~c*Power(~e, 2) + Power(~c*~d - ~a*~f, 2)), -1) + (~c*~x*(~A*(2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) - 2 * ~C*~a*(~c*~d - ~a*~f)) + 2 * ~a*~c*~e*(~A*~c - ~C*~a))*Power(~a + ~c*Power(~x, 2), 1 + ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power(-4 * ~a*~c*(1 + ~p)*(~a*~c*Power(~e, 2) + Power(~c*~d - ~a*~f, 2)), -1)
end

# line nr: 202
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~B, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), LtQ(~p, -1), NeQ(~d*~f*Power(~b, 2) + Power(~c*~d - ~a*~f, 2), 0), Not(And(Not(IntegerQ(~p)), ILtQ(~q, -1))), Not(IGtQ(~q, 0)))
  Power((1 + ~p)*(Power(~b, 2) - 4 * ~a*~c)*(~d*~f*Power(~b, 2) + Power(~c*~d - ~a*~f, 2)), -1)*integrate(Power(~d + ~f*Power(~x, 2), ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Simp((~a*~f*(1 + ~p) - ~c*~d*(2 + ~p))*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f) - ~b*(~B*~a*~f + ~B*~c*~d)) + (1 + ~p)*(~d*~f*((~b)^2) + Power(~c*~d - ~a*~f, 2))*(~B*~b - 2 * ~C*~a - 2 * ~A*~c) - ~x*(2 * ~f*((~A*~b - ~B*~a)*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) - ~b*(~A*~c - ~C*~a)*(~c*~d + ~a*~f))*(2 + ~p + ~q) - ~b*~f*(1 + ~p)*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f) - ~b*(~B*~a*~f + ~B*~c*~d))) - ~c*~f*(5 + 2 * ~p + 2 * ~q)*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f) - ~b*(~B*~a*~f + ~B*~c*~d))*Power(~x, 2), ~x), ~x) + ((~A*~b - ~B*~a)*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) + ~c*~x*(~A*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) + ~C*(~d*Power(~b, 2) - 2 * ~a*(~c*~d - ~a*~f)) - ~B*(~a*~b*~f + ~b*~c*~d)) - ~b*(~A*~c - ~C*~a)*(~c*~d + ~a*~f))*Power(~d + ~f*Power(~x, 2), 1 + ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power((1 + ~p)*(Power(~b, 2) - 4 * ~a*~c)*(~d*~f*Power(~b, 2) + Power(~c*~d - ~a*~f, 2)), -1)
end

# line nr: 218
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), LtQ(~p, -1), NeQ(~d*~f*Power(~b, 2) + Power(~c*~d - ~a*~f, 2), 0), Not(And(Not(IntegerQ(~p)), ILtQ(~q, -1))), Not(IGtQ(~q, 0)))
  Power((1 + ~p)*(Power(~b, 2) - 4 * ~a*~c)*(~d*~f*Power(~b, 2) + Power(~c*~d - ~a*~f, 2)), -1)*integrate(Power(~d + ~f*Power(~x, 2), ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Simp((~a*~f*(1 + ~p) - ~c*~d*(2 + ~p))*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f)) + (1 + ~p)*(-2 * ~C*~a - 2 * ~A*~c)*(~d*~f*((~b)^2) + Power(~c*~d - ~a*~f, 2)) - ~x*(2 * ~f*(~A*~b*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) - ~b*(~A*~c - ~C*~a)*(~c*~d + ~a*~f))*(2 + ~p + ~q) - ~b*~f*(1 + ~p)*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))) - ~c*~f*(5 + 2 * ~p + 2 * ~q)*((~A*~f + ~C*~d)*Power(~b, 2) + 2 * ~A*~c*(~c*~d - ~a*~f) - 2 * ~a*(~C*~c*~d - ~C*~a*~f))*Power(~x, 2), ~x), ~x) + (~c*~x*(~A*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) + ~C*(~d*Power(~b, 2) - 2 * ~a*(~c*~d - ~a*~f))) + ~A*~b*(~f*Power(~b, 2) + 2 * ~d*Power(~c, 2) - 2 * ~a*~c*~f) - ~b*(~A*~c - ~C*~a)*(~c*~d + ~a*~f))*Power(~d + ~f*Power(~x, 2), 1 + ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), 1 + ~p)*Power((1 + ~p)*(Power(~b, 2) - 4 * ~a*~c)*(~d*~f*Power(~b, 2) + Power(~c*~d - ~a*~f, 2)), -1)
end

# line nr: 234
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), GtQ(~p, 0), NeQ(1 + ~p + ~q, 0), NeQ(3 + 2 * ~p + 2 * ~q, 0), Not(IGtQ(~p, 0)), Not(IGtQ(~q, 0)))
  (~C*(~b*~f*~p - ~c*~e*(2 + ~q + 2 * ~p)) + ~B*~c*~f*(3 + 2 * ~p + 2 * ~q) + 2 * ~C*~c*~f*~x*(1 + ~p + ~q))*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1) - integrate(Power(~a + ~b*~x + ~c*Power(~x, 2), ~p - 1)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp(~x*((~C*~e*~f*~p*(Power(~b, 2) - 4 * ~a*~c) - ~b*~c*(~C*(Power(~e, 2) - 4 * ~d*~f)*(2 + ~q + 2 * ~p) + ~f*(3 + 2 * ~p + 2 * ~q)*(2 * ~A*~f + 2 * ~C*~d - ~B*~e)))*(1 + ~p + ~q) + 2 * ~p*(~c*~d - ~a*~f)*(~C*(1 + ~q)*(~c*~e - ~b*~f) - ~c*(~C*~e - ~B*~f)*(3 + 2 * ~p + 2 * ~q))) + ((~C*~p*(Power(~b, 2) - 4 * ~a*~c)*Power(~f, 2) - (~C*(Power(~e, 2) - 4 * ~d*~f)*(2 + ~q + 2 * ~p) + ~f*(3 + 2 * ~p + 2 * ~q)*(2 * ~A*~f + 2 * ~C*~d - ~B*~e))*Power(~c, 2))*(1 + ~p + ~q) + ~p*(~c*~e - ~b*~f)*(~C*(1 + ~q)*(~c*~e - ~b*~f) - ~c*(~C*~e - ~B*~f)*(3 + 2 * ~p + 2 * ~q)))*Power(~x, 2) + (~a*~c*(~C*(2 * ~d*~f - (2 + ~q + 2 * ~p)*Power(~e, 2)) + ~f*(~B*~e - 2 * ~A*~f)*(3 + 2 * ~p + 2 * ~q)) + ~C*~d*~f*~p*Power(~b, 2))*(1 + ~p + ~q) + ~p*(~b*~d - ~a*~e)*(~C*(1 + ~q)*(~c*~e - ~b*~f) - ~c*(~C*~e - ~B*~f)*(3 + 2 * ~p + 2 * ~q)), ~x), ~x)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1)
end

# line nr: 249
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), GtQ(~p, 0), NeQ(1 + ~p + ~q, 0), NeQ(3 + 2 * ~p + 2 * ~q, 0), Not(IGtQ(~p, 0)), Not(IGtQ(~q, 0)))
  (~C*(~b*~f*~p - ~c*~e*(2 + ~q + 2 * ~p)) + 2 * ~C*~c*~f*~x*(1 + ~p + ~q))*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1) - integrate(Power(~a + ~b*~x + ~c*Power(~x, 2), ~p - 1)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp(~x*((~C*~e*~f*~p*(Power(~b, 2) - 4 * ~a*~c) - ~b*~c*(~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) + ~C*(Power(~e, 2) - 4 * ~d*~f)*(2 + ~q + 2 * ~p)))*(1 + ~p + ~q) + 2 * ~p*(~c*~d - ~a*~f)*(~C*(1 + ~q)*(~c*~e - ~b*~f) - ~C*~c*~e*(3 + 2 * ~p + 2 * ~q))) + ((~C*~p*(Power(~b, 2) - 4 * ~a*~c)*Power(~f, 2) - (~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) + ~C*(Power(~e, 2) - 4 * ~d*~f)*(2 + ~q + 2 * ~p))*Power(~c, 2))*(1 + ~p + ~q) + ~p*(~c*~e - ~b*~f)*(~C*(1 + ~q)*(~c*~e - ~b*~f) - ~C*~c*~e*(3 + 2 * ~p + 2 * ~q)))*Power(~x, 2) + (~a*~c*(~C*(2 * ~d*~f - (2 + ~q + 2 * ~p)*Power(~e, 2)) - 2 * ~A*(3 + 2 * ~p + 2 * ~q)*((~f)^2)) + ~C*~d*~f*~p*Power(~b, 2))*(1 + ~p + ~q) + ~p*(~b*~d - ~a*~e)*(~C*(1 + ~q)*(~c*~e - ~b*~f) - ~C*~c*~e*(3 + 2 * ~p + 2 * ~q)), ~x), ~x)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1)
end

# line nr: 264
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~q), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), GtQ(~p, 0), NeQ(1 + ~p + ~q, 0), NeQ(3 + 2 * ~p + 2 * ~q, 0), Not(IGtQ(~p, 0)), Not(IGtQ(~q, 0)))
  (~B*~c*~f*(3 + 2 * ~p + 2 * ~q) + 2 * ~C*~c*~f*~x*(1 + ~p + ~q) - ~C*~c*~e*(2 + ~q + 2 * ~p))*Power(~a + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1) - integrate(Power(~a + ~c*Power(~x, 2), ~p - 1)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp(~x*(2 * ~p*(~c*~d - ~a*~f)*(~C*~c*~e*(1 + ~q) - ~c*(~C*~e - ~B*~f)*(3 + 2 * ~p + 2 * ~q)) - 4 * ~C*~a*~c*~e*~f*~p*(1 + ~p + ~q)) + ((-(~C*(Power(~e, 2) - 4 * ~d*~f)*(2 + ~q + 2 * ~p) + ~f*(3 + 2 * ~p + 2 * ~q)*(2 * ~A*~f + 2 * ~C*~d - ~B*~e))*Power(~c, 2) - 4 * ~C*~a*~c*~p*Power(~f, 2))*(1 + ~p + ~q) + ~c*~e*~p*(~C*~c*~e*(1 + ~q) - ~c*(~C*~e - ~B*~f)*(3 + 2 * ~p + 2 * ~q)))*Power(~x, 2) + ~a*~c*(~C*(2 * ~d*~f - (2 + ~q + 2 * ~p)*Power(~e, 2)) + ~f*(~B*~e - 2 * ~A*~f)*(3 + 2 * ~p + 2 * ~q))*(1 + ~p + ~q) - ~a*~e*~p*(~C*~c*~e*(1 + ~q) - ~c*(~C*~e - ~B*~f)*(3 + 2 * ~p + 2 * ~q)), ~x), ~x)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1)
end

# line nr: 279
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank()))*Power(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~C, ~q), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0), GtQ(~p, 0), NeQ(1 + ~p + ~q, 0), NeQ(3 + 2 * ~p + 2 * ~q, 0), Not(IGtQ(~p, 0)), Not(IGtQ(~q, 0)))
  (2 * ~C*~c*~f*~x*(1 + ~p + ~q) - ~C*~c*~e*(2 + ~q + 2 * ~p))*Power(~a + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), 1 + ~q)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1) - integrate(Power(~a + ~c*Power(~x, 2), ~p - 1)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q)*Simp(~x*(2 * ~p*(~c*~d - ~a*~f)*(~C*~c*~e*(1 + ~q) - ~C*~c*~e*(3 + 2 * ~p + 2 * ~q)) - 4 * ~C*~a*~c*~e*~f*~p*(1 + ~p + ~q)) + ((-(~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) + ~C*(Power(~e, 2) - 4 * ~d*~f)*(2 + ~q + 2 * ~p))*Power(~c, 2) - 4 * ~C*~a*~c*~p*Power(~f, 2))*(1 + ~p + ~q) + ~c*~e*~p*(~C*~c*~e*(1 + ~q) - ~C*~c*~e*(3 + 2 * ~p + 2 * ~q)))*Power(~x, 2) + ~a*~c*(~C*(2 * ~d*~f - (2 + ~q + 2 * ~p)*Power(~e, 2)) - 2 * ~A*(3 + 2 * ~p + 2 * ~q)*((~f)^2))*(1 + ~p + ~q) - ~a*~e*~p*(~C*~c*~e*(1 + ~q) - ~C*~c*~e*(3 + 2 * ~p + 2 * ~q)), ~x), ~x)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1)
end

# line nr: 291
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~B, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), GtQ(~p, 0), NeQ(1 + ~p + ~q, 0), NeQ(3 + 2 * ~p + 2 * ~q, 0), Not(IGtQ(~p, 0)), Not(IGtQ(~q, 0)))
  (~B*~c*~f*(3 + 2 * ~p + 2 * ~q) + ~C*~b*~f*~p + 2 * ~C*~c*~f*~x*(1 + ~p + ~q))*Power(~d + ~f*Power(~x, 2), 1 + ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1) - integrate(Power(~d + ~f*Power(~x, 2), ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p - 1)*Simp(~x*(2 * ~p*(~c*~d - ~a*~f)*(~B*~c*~f*(3 + 2 * ~p + 2 * ~q) - ~C*~b*~f*(1 + ~q)) - ~b*~c*(~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) - 4 * ~C*~d*~f*(2 + ~q + 2 * ~p))*(1 + ~p + ~q)) + (~a*~c*(2 * ~C*~d*~f - 2 * ~A*(3 + 2 * ~p + 2 * ~q)*((~f)^2)) + ~C*~d*~f*~p*Power(~b, 2))*(1 + ~p + ~q) + ((~C*~p*(Power(~b, 2) - 4 * ~a*~c)*Power(~f, 2) - (~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) - 4 * ~C*~d*~f*(2 + ~q + 2 * ~p))*Power(~c, 2))*(1 + ~p + ~q) - ~b*~f*~p*(~B*~c*~f*(3 + 2 * ~p + 2 * ~q) - ~C*~b*~f*(1 + ~q)))*Power(~x, 2) + ~b*~d*~p*(~B*~c*~f*(3 + 2 * ~p + 2 * ~q) - ~C*~b*~f*(1 + ~q)), ~x), ~x)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1)
end

# line nr: 306
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()), Pattern(~q, Blank()))*Power(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()), Pattern(~p, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~C, ~q), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), GtQ(~p, 0), NeQ(1 + ~p + ~q, 0), NeQ(3 + 2 * ~p + 2 * ~q, 0), Not(IGtQ(~p, 0)), Not(IGtQ(~q, 0)))
  (~C*~b*~f*~p + 2 * ~C*~c*~f*~x*(1 + ~p + ~q))*Power(~d + ~f*Power(~x, 2), 1 + ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1) - integrate(Power(~d + ~f*Power(~x, 2), ~q)*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p - 1)*Simp(~x*(-~b*~c*(~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) - 4 * ~C*~d*~f*(2 + ~q + 2 * ~p))*(1 + ~p + ~q) - 2 * ~C*~b*~f*~p*(1 + ~q)*(~c*~d - ~a*~f)) + ((~C*~p*(Power(~b, 2) - 4 * ~a*~c)*Power(~f, 2) - (~f*(2 * ~A*~f + 2 * ~C*~d)*(3 + 2 * ~p + 2 * ~q) - 4 * ~C*~d*~f*(2 + ~q + 2 * ~p))*Power(~c, 2))*(1 + ~p + ~q) + ~C*~p*((~b)^2)*((~f)^2)*(1 + ~q))*Power(~x, 2) + (~a*~c*(2 * ~C*~d*~f - 2 * ~A*(3 + 2 * ~p + 2 * ~q)*((~f)^2)) + ~C*~d*~f*~p*Power(~b, 2))*(1 + ~p + ~q) - ~C*~d*~f*~p*((~b)^2)*(1 + ~q), ~x), ~x)*Power(2 * ~c*(1 + ~p + ~q)*(3 + 2 * ~p + 2 * ~q)*Power(~f, 2), -1)
end

# line nr: 321
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank())), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0))
  With(List(Set(~q, Power(~a, 2)*Power(~f, 2) + Power(~c, 2)*Power(~d, 2) + ~a*~c*Power(~e, 2) + ~d*~f*Power(~b, 2) - ~b*~c*~d*~e - ~a*~b*~e*~f - 2 * ~a*~c*~d*~f)), Condition(Power(~q, -1)*integrate((~A*~d*Power(~c, 2) + ~A*~f*Power(~b, 2) + ~C*~f*Power(~a, 2) + ~c*~x*(~C*~a*~e + ~A*~b*~f + ~B*~c*~d - ~B*~a*~f - ~C*~b*~d - ~A*~c*~e) + ~B*~a*~c*~e - ~A*~b*~c*~e - ~A*~a*~c*~f - ~B*~a*~b*~f - ~C*~a*~c*~d)*Power(~a + ~b*~x + ~c*Power(~x, 2), -1), ~x) + Power(~q, -1)*integrate((~A*~a*Power(~f, 2) + ~C*~c*Power(~d, 2) + ~A*~c*Power(~e, 2) + ~B*~b*~d*~f - ~f*~x*(~C*~a*~e + ~A*~b*~f + ~B*~c*~d - ~B*~a*~f - ~C*~b*~d - ~A*~c*~e) - ~A*~c*~d*~f - ~B*~c*~d*~e - ~C*~a*~d*~f - ~A*~b*~e*~f)*Power(~d + ~e*~x + ~f*Power(~x, 2), -1), ~x), NeQ(~q, 0)))
end

# line nr: 332
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank())), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0))
  With(List(Set(~q, Power(~a, 2)*Power(~f, 2) + Power(~c, 2)*Power(~d, 2) + ~a*~c*Power(~e, 2) + ~d*~f*Power(~b, 2) - ~b*~c*~d*~e - ~a*~b*~e*~f - 2 * ~a*~c*~d*~f)), Condition(Power(~q, -1)*integrate((~A*~d*Power(~c, 2) + ~A*~f*Power(~b, 2) + ~C*~f*Power(~a, 2) + ~c*~x*(~C*~a*~e + ~A*~b*~f - ~C*~b*~d - ~A*~c*~e) - ~A*~b*~c*~e - ~A*~a*~c*~f - ~C*~a*~c*~d)*Power(~a + ~b*~x + ~c*Power(~x, 2), -1), ~x) + Power(~q, -1)*integrate((~A*~a*Power(~f, 2) + ~C*~c*Power(~d, 2) + ~A*~c*Power(~e, 2) - ~f*~x*(~C*~a*~e + ~A*~b*~f - ~C*~b*~d - ~A*~c*~e) - ~A*~c*~d*~f - ~C*~a*~d*~f - ~A*~b*~e*~f)*Power(~d + ~e*~x + ~f*Power(~x, 2), -1), ~x), NeQ(~q, 0)))
end

# line nr: 343
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()))*(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank())), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0))
  With(List(Set(~q, Power(~a, 2)*Power(~f, 2) + Power(~c, 2)*Power(~d, 2) + ~d*~f*Power(~b, 2) - 2 * ~a*~c*~d*~f)), Condition(Power(~q, -1)*integrate((~A*~a*Power(~f, 2) + ~C*~c*Power(~d, 2) + ~B*~b*~d*~f - ~f*~x*(~A*~b*~f + ~B*~c*~d - ~B*~a*~f - ~C*~b*~d) - ~A*~c*~d*~f - ~C*~a*~d*~f)*Power(~d + ~f*Power(~x, 2), -1), ~x) + Power(~q, -1)*integrate((~A*~d*Power(~c, 2) + ~c*~x*(~A*~b*~f + ~B*~c*~d - ~B*~a*~f - ~C*~b*~d) + ~A*~f*Power(~b, 2) + ~C*~f*Power(~a, 2) - ~A*~a*~c*~f - ~B*~a*~b*~f - ~C*~a*~c*~d)*Power(~a + ~b*~x + ~c*Power(~x, 2), -1), ~x), NeQ(~q, 0)))
end

# line nr: 352
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~d, Blank()))*(Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank())), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0))
  With(List(Set(~q, Power(~a, 2)*Power(~f, 2) + Power(~c, 2)*Power(~d, 2) + ~d*~f*Power(~b, 2) - 2 * ~a*~c*~d*~f)), Condition(Power(~q, -1)*integrate((~A*~a*Power(~f, 2) + ~C*~c*Power(~d, 2) - ~f*~x*(~A*~b*~f - ~C*~b*~d) - ~A*~c*~d*~f - ~C*~a*~d*~f)*Power(~d + ~f*Power(~x, 2), -1), ~x) + Power(~q, -1)*integrate((~A*~d*Power(~c, 2) + ~A*~f*Power(~b, 2) + ~C*~f*Power(~a, 2) + ~c*~x*(~A*~b*~f - ~C*~b*~d) - ~A*~a*~c*~f - ~C*~a*~c*~d)*Power(~a + ~b*~x + ~c*Power(~x, 2), -1), ~x), NeQ(~q, 0)))
end

# line nr: 361
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*Sqrt(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0))
  Power(~c, -1)*integrate((~A*~c + ~x*(~B*~c - ~C*~b) - ~C*~a)*Power((~a + ~b*~x + ~c*Power(~x, 2))*Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x) + ~C*Power(~c, -1)*integrate(Power(Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x)
end

# line nr: 368
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*Sqrt(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0), NeQ(Power(~e, 2) - 4 * ~d*~f, 0))
  Power(~c, -1)*integrate((~A*~c - ~C*~a - ~C*~b*~x)*Power((~a + ~b*~x + ~c*Power(~x, 2))*Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x) + ~C*Power(~c, -1)*integrate(Power(Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x)
end

# line nr: 374
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*Sqrt(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0))
  Power(~c, -1)*integrate((~A*~c + ~B*~c*~x - ~C*~a)*Power((~a + ~c*Power(~x, 2))*Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x) + ~C*Power(~c, -1)*integrate(Power(Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x)
end

# line nr: 380
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*Sqrt(Optional(Pattern(~e, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~e, 2) - 4 * ~d*~f, 0))
  (~A*~c - ~C*~a)*Power(~c, -1)*integrate(Power((~a + ~c*Power(~x, 2))*Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x) + ~C*Power(~c, -1)*integrate(Power(Sqrt(~d + ~e*~x + ~f*Power(~x, 2)), -1), ~x)
end

# line nr: 386
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*Sqrt(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0))
  Power(~c, -1)*integrate((~A*~c + ~x*(~B*~c - ~C*~b) - ~C*~a)*Power((~a + ~b*~x + ~c*Power(~x, 2))*Sqrt(~d + ~f*Power(~x, 2)), -1), ~x) + ~C*Power(~c, -1)*integrate(Power(Sqrt(~d + ~f*Power(~x, 2)), -1), ~x)
end

# line nr: 392
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power((Optional(Pattern(~b, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~x, Blank()), 2) + Pattern(~a, Blank()))*Sqrt(Optional(Pattern(~f, Blank()))*Power(Pattern(~x, Blank()), 2) + Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~f, ~A, ~C), ~x), NeQ(Power(~b, 2) - 4 * ~a*~c, 0))
  Power(~c, -1)*integrate((~A*~c - ~C*~a - ~C*~b*~x)*Power((~a + ~b*~x + ~c*Power(~x, 2))*Sqrt(~d + ~f*Power(~x, 2)), -1), ~x) + ~C*Power(~c, -1)*integrate(Power(Sqrt(~d + ~f*Power(~x, 2)), -1), ~x)
end

# line nr: 398
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~a, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), LinearQ(~u, ~x), NeQ(~u, ~x))
  Power(Coefficient(~u, ~x, 1), -1)*Subst(integrate((~A + ~B*~x + ~C*Power(~x, 2))*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x), ~x, ~u)
end

# line nr: 404
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~a, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), LinearQ(~u, ~x), NeQ(~u, ~x))
  Power(Coefficient(~u, ~x, 1), -1)*Subst(integrate((~A + ~B*~x)*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x), ~x, ~u)
end

# line nr: 410
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~b, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~c, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~a, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~p, ~q), ~x), LinearQ(~u, ~x), NeQ(~u, ~x))
  Power(Coefficient(~u, ~x, 1), -1)*Subst(integrate((~A + ~C*Power(~x, 2))*Power(~a + ~b*~x + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x), ~x, ~u)
end

# line nr: 416
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~C, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~a, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), LinearQ(~u, ~x), NeQ(~u, ~x))
  Power(Coefficient(~u, ~x, 1), -1)*Subst(integrate((~A + ~B*~x + ~C*Power(~x, 2))*Power(~a + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x), ~x, ~u)
end

# line nr: 422
@rule integrate((Optional(Pattern(~B, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~a, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~p, ~q), ~x), LinearQ(~u, ~x), NeQ(~u, ~x))
  Power(Coefficient(~u, ~x, 1), -1)*Subst(integrate((~A + ~B*~x)*Power(~a + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x), ~x, ~u)
end

# line nr: 428
@rule integrate((Optional(Pattern(~C, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~A, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~a, Blank())), Optional(Pattern(~p, Blank())))*Power(Optional(Pattern(~e, Blank()))*Pattern(~u, Blank()) + Optional(Pattern(~f, Blank()))*Power(Pattern(~u, Blank()), 2) + Optional(Pattern(~d, Blank())), Optional(Pattern(~q, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~c, ~d, ~e, ~f, ~A, ~C, ~p, ~q), ~x), LinearQ(~u, ~x), NeQ(~u, ~x))
  Power(Coefficient(~u, ~x, 1), -1)*Subst(integrate((~A + ~C*Power(~x, 2))*Power(~a + ~c*Power(~x, 2), ~p)*Power(~d + ~e*~x + ~f*Power(~x, 2), ~q), ~x), ~x, ~u)
end

