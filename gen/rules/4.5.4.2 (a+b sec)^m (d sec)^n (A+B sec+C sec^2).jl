# line nr: 23
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Optional(Pattern(~a, Blank())), Optional(Pattern(~m, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())) + Optional(Pattern(~c, Blank())), Optional(Pattern(~n, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n), ~x), EqQ(~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b, 0))
  integrate((~B*~b + ~C*~b*csc(~e + ~f*~x) - ~C*~a)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~c + ~d*csc(~e + ~f*~x), ~n), ~x)*Power(Power(~b, 2), -1)
end

# line nr: 29
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Optional(Pattern(~a, Blank())), Optional(Pattern(~m, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())) + Optional(Pattern(~c, Blank())), Optional(Pattern(~n, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~m, ~n), ~x), EqQ(~A*Power(~b, 2) + ~C*Power(~a, 2), 0))
  -~C*integrate((~a - ~b*csc(~e + ~f*~x))*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~c + ~d*csc(~e + ~f*~x), ~n), ~x)*Power(Power(~b, 2), -1)
end

# line nr: 35
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C), ~x), LtQ(~n, -1))
  Power(~d*~n, -1)*integrate(Simp(~n*(~A*~b + ~B*~a) + (~n*(~C*~a + ~B*~b) + ~A*~a*(1 + ~n))*csc(~e + ~f*~x) + ~C*~b*~n*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x) + ~A*~a*cot(~e + ~f*~x)*Power(~f*~n, -1)*Power(~d*csc(~e + ~f*~x), ~n)
end

# line nr: 42
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*(Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C), ~x), LtQ(~n, -1))
  Power(~d*~n, -1)*integrate(Simp(~A*~b*~n + ~a*(~A*(1 + ~n) + ~C*~n)*csc(~e + ~f*~x) + ~C*~b*~n*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x) + ~A*~a*cot(~e + ~f*~x)*Power(~f*~n, -1)*Power(~d*csc(~e + ~f*~x), ~n)
end

# line nr: 49
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Optional(Pattern(~n, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n), ~x), Not(LtQ(~n, -1)))
  Power(2 + ~n, -1)*integrate(Simp((~b*(~C*(1 + ~n) + ~A*(2 + ~n)) + ~B*~a*(2 + ~n))*csc(~e + ~f*~x) + ~A*~a*(2 + ~n) + (2 + ~n)*(~C*~a + ~B*~b)*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~C*~b*cot(~e + ~f*~x)*csc(~e + ~f*~x)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~f*(2 + ~n), -1)
end

# line nr: 56
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*(Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Optional(Pattern(~n, Blank()))), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n), ~x), Not(LtQ(~n, -1)))
  Power(2 + ~n, -1)*integrate(Simp(~A*~a*(2 + ~n) + ~b*(~C*(1 + ~n) + ~A*(2 + ~n))*csc(~e + ~f*~x) + ~C*~a*(2 + ~n)*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~C*~b*cot(~e + ~f*~x)*csc(~e + ~f*~x)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~f*(2 + ~n), -1)
end

# line nr: 63
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~B, ~C), ~x), LtQ(~m, -1), EqQ(Power(~a, 2) - Power(~b, 2), 0))
  (~B*~b - ~A*~a - ~C*~a)*cot(~e + ~f*~x)*csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~a*~f*(1 + 2 * ~m), -1) - Power(~a*~b*(1 + 2 * ~m), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~B*~a - ~C*~b - (~B*~b*(2 + ~m) - ~a*(~A*(2 + ~m) - ~C*(~m - 1)))*csc(~e + ~f*~x) - 2 * ~A*~b*(1 + ~m), ~x), ~x)
end

# line nr: 71
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~C), ~x), LtQ(~m, -1), EqQ(Power(~a, 2) - Power(~b, 2), 0))
  (-~A - ~C)*cot(~e + ~f*~x)*csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~f*(1 + 2 * ~m), -1) - Power(~a*~b*(1 + 2 * ~m), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~a*(~A*(2 + ~m) - ~C*(~m - 1))*csc(~e + ~f*~x) - ~C*~b - 2 * ~A*~b*(1 + ~m), ~x), ~x)
end

# line nr: 79
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~B, ~C), ~x), LtQ(~m, -1), NeQ(Power(~a, 2) - Power(~b, 2), 0))
  Power(~b*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~b*(1 + ~m)*(~A*~a + ~C*~a - ~B*~b) - (~A*Power(~b, 2) + ~C*Power(~a, 2) + ~b*(1 + ~m)*(~A*~b + ~C*~b - ~B*~a) - ~B*~a*~b)*csc(~e + ~f*~x), ~x), ~x) + (~B*~a*~b - ~A*Power(~b, 2) - ~C*Power(~a, 2))*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~b*~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)
end

# line nr: 87
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~C), ~x), LtQ(~m, -1), NeQ(Power(~a, 2) - Power(~b, 2), 0))
  Power(~b*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~a*~b*(~A + ~C)*(1 + ~m) - (~A*Power(~b, 2) + ~C*Power(~a, 2) + ~b*(1 + ~m)*(~A*~b + ~C*~b))*csc(~e + ~f*~x), ~x), ~x) + (-~A*Power(~b, 2) - ~C*Power(~a, 2))*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~b*~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)
end

# line nr: 95
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~B, ~C, ~m), ~x), Not(LtQ(~m, -1)))
  Power(~b*(2 + ~m), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp((~B*~b*(2 + ~m) - ~C*~a)*csc(~e + ~f*~x) + ~C*~b*(1 + ~m) + ~A*~b*(2 + ~m), ~x), ~x) - ~C*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~b*~f*(2 + ~m), -1)
end

# line nr: 102
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~C, ~m), ~x), Not(LtQ(~m, -1)))
  Power(~b*(2 + ~m), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~C*~b*(1 + ~m) + ~A*~b*(2 + ~m) - ~C*~a*csc(~e + ~f*~x), ~x), ~x) - ~C*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~b*~f*(2 + ~m), -1)
end

# line nr: 109
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n), ~x), EqQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -Power(2, -1)))
  (~B*~b - ~A*~a - ~C*~a)*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~a*~f*(1 + 2 * ~m), -1) - Power(~a*~b*(1 + 2 * ~m), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~B*~a*~n - (~B*~b*(1 + ~m + ~n) - ~a*(~A*(1 + ~m + ~n) - ~C*(~m - ~n)))*csc(~e + ~f*~x) - ~A*~b*(1 + ~n + 2 * ~m) - ~C*~b*~n, ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x)
end

# line nr: 117
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n), ~x), EqQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -Power(2, -1)))
  Power(~a*~b*(1 + 2 * ~m), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~A*~b*(1 + ~n + 2 * ~m) + ~C*~b*~n - ~a*(~A*(1 + ~m + ~n) - ~C*(~m - ~n))*csc(~e + ~f*~x), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~a*(~A + ~C)*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~a*~f*(1 + 2 * ~m), -1)
end

# line nr: 125
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m), ~x), EqQ(Power(~a, 2) - Power(~b, 2), 0), Not(LtQ(~m, -Power(2, -1))), Or(LtQ(~n, -Power(2, -1)), EqQ(1 + ~m + ~n, 0)))
  ~A*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~f*~n, -1)*Power(~d*csc(~e + ~f*~x), ~n) - Power(~b*~d*~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~A*~a*~m - ~B*~b*~n - ~b*(~A*(1 + ~m + ~n) + ~C*~n)*csc(~e + ~f*~x), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x)
end

# line nr: 132
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m), ~x), EqQ(Power(~a, 2) - Power(~b, 2), 0), Not(LtQ(~m, -Power(2, -1))), Or(LtQ(~n, -Power(2, -1)), EqQ(1 + ~m + ~n, 0)))
  ~A*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~f*~n, -1)*Power(~d*csc(~e + ~f*~x), ~n) - Power(~b*~d*~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~A*~a*~m - ~b*(~A*(1 + ~m + ~n) + ~C*~n)*csc(~e + ~f*~x), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x)
end

# line nr: 139
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n), ~x), EqQ(Power(~a, 2) - Power(~b, 2), 0), Not(LtQ(~m, -Power(2, -1))), Not(LtQ(~n, -Power(2, -1))), NeQ(1 + ~m + ~n, 0))
  Power(~b*(1 + ~m + ~n), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp((~C*~a*~m + ~B*~b*(1 + ~m + ~n))*csc(~e + ~f*~x) + ~C*~b*~n + ~A*~b*(1 + ~m + ~n), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~C*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~f*(1 + ~m + ~n), -1)
end

# line nr: 146
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m, ~n), ~x), EqQ(Power(~a, 2) - Power(~b, 2), 0), Not(LtQ(~m, -Power(2, -1))), Not(LtQ(~n, -Power(2, -1))), NeQ(1 + ~m + ~n, 0))
  Power(~b*(1 + ~m + ~n), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~C*~b*~n + ~A*~b*(1 + ~m + ~n) + ~C*~a*~m*csc(~e + ~f*~x), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~C*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~f*(1 + ~m + ~n), -1)
end

# line nr: 153
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -1))
  ~a*(~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b)*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2))*Power(~b, 2), -1) - Power((1 + ~m)*(Power(~a, 2) - Power(~b, 2))*Power(~b, 2), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp((~B*~b*((1 + ~m)*Power(~b, 2) + Power(~a, 2)) - ~a*(~C*((1 + ~m)*Power(~b, 2) + Power(~a, 2)) + ~A*(2 + ~m)*Power(~b, 2)))*csc(~e + ~f*~x) + ~b*(1 + ~m)*(~A*Power(~b, 2) - ~a*(~B*~b - ~C*~a)) - ~C*~b*(1 + ~m)*(Power(~a, 2) - Power(~b, 2))*Power(csc(~e + ~f*~x), 2), ~x), ~x)
end

# line nr: 163
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -1))
  ~a*(~A*Power(~b, 2) + ~C*Power(~a, 2))*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2))*Power(~b, 2), -1) - Power((1 + ~m)*(Power(~a, 2) - Power(~b, 2))*Power(~b, 2), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~b*(1 + ~m)*(~A*Power(~b, 2) + ~C*Power(~a, 2)) - ~a*(~C*((1 + ~m)*Power(~b, 2) + Power(~a, 2)) + ~A*(2 + ~m)*Power(~b, 2))*csc(~e + ~f*~x) - ~C*~b*(1 + ~m)*(Power(~a, 2) - Power(~b, 2))*Power(csc(~e + ~f*~x), 2), ~x), ~x)
end

# line nr: 171
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~B, ~C, ~m), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), Not(LtQ(~m, -1)))
  Power(~b*(3 + ~m), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~C*~a + ~b*(~C*(2 + ~m) + ~A*(3 + ~m))*csc(~e + ~f*~x) - (2 * ~C*~a - ~B*~b*(3 + ~m))*Power(csc(~e + ~f*~x), 2), ~x), ~x) - ~C*cot(~e + ~f*~x)*csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~b*~f*(3 + ~m), -1)
end

# line nr: 179
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~e, ~f, ~A, ~C, ~m), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), Not(LtQ(~m, -1)))
  Power(~b*(3 + ~m), -1)*integrate(csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~C*~a + ~b*(~C*(2 + ~m) + ~A*(3 + ~m))*csc(~e + ~f*~x) - 2 * ~C*~a*Power(csc(~e + ~f*~x), 2), ~x), ~x) - ~C*cot(~e + ~f*~x)*csc(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~b*~f*(3 + ~m), -1)
end

# line nr: 186
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), GtQ(~m, 0), LeQ(~n, -1))
  ~A*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~f*~n, -1)*Power(~d*csc(~e + ~f*~x), ~n) - Power(~d*~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m - 1)*Simp(~A*~b*~m - (~a*(~A*(1 + ~n) + ~C*~n) + ~B*~b*~n)*csc(~e + ~f*~x) - ~B*~a*~n - ~b*(~A*(1 + ~m + ~n) + ~C*~n)*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x)
end

# line nr: 194
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), GtQ(~m, 0), LeQ(~n, -1))
  ~A*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~f*~n, -1)*Power(~d*csc(~e + ~f*~x), ~n) - Power(~d*~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m - 1)*Simp(~A*~b*~m - ~a*(~A*(1 + ~n) + ~C*~n)*csc(~e + ~f*~x) - ~b*(~A*(1 + ~m + ~n) + ~C*~n)*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x)
end

# line nr: 202
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), GtQ(~m, 0), Not(LeQ(~n, -1)))
  Power(1 + ~m + ~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m - 1)*Simp(((~A*~b + ~B*~a)*(1 + ~m + ~n) + ~C*~b*(~m + ~n))*csc(~e + ~f*~x) + (~C*~a*~m + ~B*~b*(1 + ~m + ~n))*Power(csc(~e + ~f*~x), 2) + ~A*~a*(1 + ~m + ~n) + ~C*~a*~n, ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~C*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~f*(1 + ~m + ~n), -1)
end

# line nr: 210
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), GtQ(~m, 0), Not(LeQ(~n, -1)))
  Power(1 + ~m + ~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m - 1)*Simp(~A*~a*(1 + ~m + ~n) + ~C*~a*~n + ~b*(~A*(1 + ~m + ~n) + ~C*(~m + ~n))*csc(~e + ~f*~x) + ~C*~a*~m*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) - ~C*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~f*(1 + ~m + ~n), -1)
end

# line nr: 218
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -1), GtQ(~n, 0))
  ~d*Power(~b*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~A*(~n - 1)*Power(~b, 2) + ~b*(1 + ~m)*(~A*~a + ~C*~a - ~B*~b)*csc(~e + ~f*~x) - (~C*(~n*Power(~a, 2) + (1 + ~m)*Power(~b, 2)) + ~b*(~A*~b - ~B*~a)*(1 + ~m + ~n))*Power(csc(~e + ~f*~x), 2) - ~a*(~n - 1)*(~B*~b - ~C*~a), ~x)*Power(~d*csc(~e + ~f*~x), ~n - 1), ~x) - ~d*(~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b)*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n - 1)*Power(~b*~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)
end

# line nr: 228
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -1), GtQ(~n, 0))
  ~d*Power(~b*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~C*(~n - 1)*Power(~a, 2) + ~A*(~n - 1)*Power(~b, 2) + ~a*~b*(~A + ~C)*(1 + ~m)*csc(~e + ~f*~x) - (~C*(~n*Power(~a, 2) + (1 + ~m)*Power(~b, 2)) + ~A*(1 + ~m + ~n)*Power(~b, 2))*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), ~n - 1), ~x) - ~d*(~A*Power(~b, 2) + ~C*Power(~a, 2))*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n - 1)*Power(~b*~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)
end

# line nr: 236
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -1), Not(And(ILtQ(~m + Power(2, -1), 0), ILtQ(~n, 0))))
  Power(~a*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp(~a*(1 + ~m)*(~A*~a + ~C*~a - ~B*~b) + (2 + ~m + ~n)*(~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b)*Power(csc(~e + ~f*~x), 2) - (1 + ~m + ~n)*(~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b) - ~a*(1 + ~m)*(~A*~b + ~C*~b - ~B*~a)*csc(~e + ~f*~x), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) + (~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b)*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~a*~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)
end

# line nr: 246
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LtQ(~m, -1), Not(And(ILtQ(~m + Power(2, -1), 0), ILtQ(~n, 0))))
  Power(~a*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Simp((~A + ~C)*(1 + ~m)*Power(~a, 2) + (~A*Power(~b, 2) + ~C*Power(~a, 2))*(2 + ~m + ~n)*Power(csc(~e + ~f*~x), 2) - (~A*Power(~b, 2) + ~C*Power(~a, 2))*(1 + ~m + ~n) - ~a*~b*(~A + ~C)*(1 + ~m)*csc(~e + ~f*~x), ~x)*Power(~d*csc(~e + ~f*~x), ~n), ~x) + (~A*Power(~b, 2) + ~C*Power(~a, 2))*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~a*~f*(1 + ~m)*(Power(~a, 2) - Power(~b, 2)), -1)
end

# line nr: 254
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), GtQ(~n, 0))
  ~d*Power(~b*(1 + ~m + ~n), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp((~B*~b*(1 + ~m + ~n) - ~C*~a*~n)*Power(csc(~e + ~f*~x), 2) + (~C*~b*(~m + ~n) + ~A*~b*(1 + ~m + ~n))*csc(~e + ~f*~x) + ~C*~a*(~n - 1), ~x)*Power(~d*csc(~e + ~f*~x), ~n - 1), ~x) - ~C*~d*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n - 1)*Power(~b*~f*(1 + ~m + ~n), -1)
end

# line nr: 262
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), GtQ(~n, 0))
  ~d*Power(~b*(1 + ~m + ~n), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp((~C*~b*(~m + ~n) + ~A*~b*(1 + ~m + ~n))*csc(~e + ~f*~x) + ~C*~a*(~n - 1) - ~C*~a*~n*Power(csc(~e + ~f*~x), 2), ~x)*Power(~d*csc(~e + ~f*~x), ~n - 1), ~x) - ~C*~d*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n - 1)*Power(~b*~f*(1 + ~m + ~n), -1)
end

# line nr: 270
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LeQ(~n, -1))
  Power(~a*~d*~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~B*~a*~n + ~a*(~A + ~A*~n + ~C*~n)*csc(~e + ~f*~x) + ~A*~b*(2 + ~m + ~n)*Power(csc(~e + ~f*~x), 2) - ~A*~b*(1 + ~m + ~n), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x) + ~A*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~a*~f*~n, -1)
end

# line nr: 278
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Pattern(~m, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0), LeQ(~n, -1))
  Power(~a*~d*~n, -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), ~m)*Simp(~a*(~A + ~A*~n + ~C*~n)*csc(~e + ~f*~x) + ~A*~b*(2 + ~m + ~n)*Power(csc(~e + ~f*~x), 2) - ~A*~b*(1 + ~m + ~n), ~x)*Power(~d*csc(~e + ~f*~x), 1 + ~n), ~x) + ~A*cot(~e + ~f*~x)*Power(~a + ~b*csc(~e + ~f*~x), 1 + ~m)*Power(~d*csc(~e + ~f*~x), ~n)*Power(~a*~f*~n, -1)
end

# line nr: 286
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*Sqrt(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0))
  integrate((~A*~a - (~A*~b - ~B*~a)*csc(~e + ~f*~x))*Power(Sqrt(~d*csc(~e + ~f*~x)), -1), ~x)*Power(Power(~a, 2), -1) + (~A*Power(~b, 2) + ~C*Power(~a, 2) - ~B*~a*~b)*Power(Power(~a, 2)*Power(~d, 2), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), -1)*Power(~d*csc(~e + ~f*~x), 3Power(2, -1)), ~x)
end

# line nr: 293
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*Sqrt(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0))
  integrate((~A*~a - ~A*~b*csc(~e + ~f*~x))*Power(Sqrt(~d*csc(~e + ~f*~x)), -1), ~x)*Power(Power(~a, 2), -1) + (~A*Power(~b, 2) + ~C*Power(~a, 2))*Power(Power(~a, 2)*Power(~d, 2), -1)*integrate(Power(~a + ~b*csc(~e + ~f*~x), -1)*Power(~d*csc(~e + ~f*~x), 3Power(2, -1)), ~x)
end

# line nr: 300
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(Sqrt(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*Sqrt(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0))
  ~C*integrate(Power(~d*csc(~e + ~f*~x), 3Power(2, -1))*Power(Sqrt(~a + ~b*csc(~e + ~f*~x)), -1), ~x)*Power(Power(~d, 2), -1) + integrate((~A + ~B*csc(~e + ~f*~x))*Power(Sqrt(~a + ~b*csc(~e + ~f*~x))*Sqrt(~d*csc(~e + ~f*~x)), -1), ~x)
end

# line nr: 307
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(Sqrt(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()))*Sqrt(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank()))), -1), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C), ~x), NeQ(Power(~a, 2) - Power(~b, 2), 0))
  ~A*integrate(Power(Sqrt(~a + ~b*csc(~e + ~f*~x))*Sqrt(~d*csc(~e + ~f*~x)), -1), ~x) + ~C*integrate(Power(~d*csc(~e + ~f*~x), 3Power(2, -1))*Power(Sqrt(~a + ~b*csc(~e + ~f*~x)), -1), ~x)*Power(Power(~d, 2), -1)
end

# line nr: 314
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Optional(Pattern(~n, Blank()))), Pattern(~x, Blank(~Symbol))) => if FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n), ~x)
  Unintegrable((~A + ~B*csc(~e + ~f*~x) + ~C*Power(csc(~e + ~f*~x), 2))*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n), ~x)
end

# line nr: 320
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Optional(Pattern(~n, Blank()))), Pattern(~x, Blank(~Symbol))) => if FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~m, ~n), ~x)
  Unintegrable((~A + ~C*Power(csc(~e + ~f*~x), 2))*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n), ~x)
end

# line nr: 326
@rule integrate((sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(cos(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n), ~x), Not(IntegerQ(~n)), IntegerQ(~m))
  Power(~d, 2 + ~m)*integrate((~C + ~B*cos(~e + ~f*~x) + ~A*Power(cos(~e + ~f*~x), 2))*Power(~b + ~a*cos(~e + ~f*~x), ~m)*Power(~d*cos(~e + ~f*~x), ~n - 2 - ~m), ~x)
end

# line nr: 332
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(sin(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~B, ~C, ~n), ~x), Not(IntegerQ(~n)), IntegerQ(~m))
  Power(~d, 2 + ~m)*integrate((~C + ~A*Power(sin(~e + ~f*~x), 2) + ~B*sin(~e + ~f*~x))*Power(~b + ~a*sin(~e + ~f*~x), ~m)*Power(~d*sin(~e + ~f*~x), ~n - 2 - ~m), ~x)
end

# line nr: 338
@rule integrate((Optional(Pattern(~C, Blank()))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(cos(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n), ~x), Not(IntegerQ(~n)), IntegerQ(~m))
  Power(~d, 2 + ~m)*integrate((~C + ~A*Power(cos(~e + ~f*~x), 2))*Power(~b + ~a*cos(~e + ~f*~x), ~m)*Power(~d*cos(~e + ~f*~x), ~n - 2 - ~m), ~x)
end

# line nr: 344
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(sin(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~d, ~e, ~f, ~A, ~C, ~n), ~x), Not(IntegerQ(~n)), IntegerQ(~m))
  Power(~d, 2 + ~m)*integrate((~C + ~A*Power(sin(~e + ~f*~x), 2))*Power(~b + ~a*sin(~e + ~f*~x), ~m)*Power(~d*sin(~e + ~f*~x), ~n - 2 - ~m), ~x)
end

# line nr: 350
@rule integrate((sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~p, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n, ~p), ~x), Not(IntegerQ(~n)))
  Power(~c, IntPart(~n))*Power(~c*Power(~d*sec(~e + ~f*~x), ~p), FracPart(~n))*integrate((~A + ~B*sec(~e + ~f*~x) + ~C*Power(sec(~e + ~f*~x), 2))*Power(~a + ~b*sec(~e + ~f*~x), ~m)*Power(~d*sec(~e + ~f*~x), ~n*~p), ~x)*Power(Power(~d*sec(~e + ~f*~x), ~p*FracPart(~n)), -1)
end

# line nr: 357
@rule integrate((csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~B, Blank())) + Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~p, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~B, ~C, ~m, ~n, ~p), ~x), Not(IntegerQ(~n)))
  Power(~c, IntPart(~n))*Power(~c*Power(~d*csc(~e + ~f*~x), ~p), FracPart(~n))*integrate((~A + ~B*csc(~e + ~f*~x) + ~C*Power(csc(~e + ~f*~x), 2))*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n*~p), ~x)*Power(Power(~d*csc(~e + ~f*~x), ~p*FracPart(~n)), -1)
end

# line nr: 364
@rule integrate((Optional(Pattern(~C, Blank()))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(sec(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~p, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~m, ~n, ~p), ~x), Not(IntegerQ(~n)))
  Power(~c, IntPart(~n))*Power(~c*Power(~d*sec(~e + ~f*~x), ~p), FracPart(~n))*integrate((~A + ~C*Power(sec(~e + ~f*~x), 2))*Power(~a + ~b*sec(~e + ~f*~x), ~m)*Power(~d*sec(~e + ~f*~x), ~n*~p), ~x)*Power(Power(~d*sec(~e + ~f*~x), ~p*FracPart(~n)), -1)
end

# line nr: 371
@rule integrate((Optional(Pattern(~C, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank()))), 2) + Optional(Pattern(~A, Blank())))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~b, Blank())) + Pattern(~a, Blank()), Optional(Pattern(~m, Blank())))*Power(Optional(Pattern(~c, Blank()))*Power(csc(Optional(Pattern(~f, Blank()))*Pattern(~x, Blank()) + Optional(Pattern(~e, Blank())))*Optional(Pattern(~d, Blank())), Pattern(~p, Blank())), Pattern(~n, Blank())), Pattern(~x, Blank(~Symbol))) => if And(FreeQ(List(~a, ~b, ~c, ~d, ~e, ~f, ~A, ~C, ~m, ~n, ~p), ~x), Not(IntegerQ(~n)))
  Power(~c, IntPart(~n))*Power(~c*Power(~d*csc(~e + ~f*~x), ~p), FracPart(~n))*integrate((~A + ~C*Power(csc(~e + ~f*~x), 2))*Power(~a + ~b*csc(~e + ~f*~x), ~m)*Power(~d*csc(~e + ~f*~x), ~n*~p), ~x)*Power(Power(~d*csc(~e + ~f*~x), ~p*FracPart(~n)), -1)
end

